#!/bin/bash

# $1 = PLATFORM
# $2 = INITIAL

# Usage Cases:
# $ setup docker
# $ setup docker initial
# $ setup vagrant
# $ setup vagrant initial

if [ $1 ]
then

  echo '> Pulling changes from the remote repository..'
  git pull

  if [ $2 ] && [ $2 = 'initial' ]
  then
    if [ -f 'Vagrantfile' ] && [ -f 'src/.env.example' ]
    then

      # Store the 'config.vm.network' line from Vagrantfile in a new file
      grep 'ip: ' Vagrantfile > src/Vagrantfile_ip-address-line.txt

      # Copy the contents of the new file to the clipboard
      pbcopy < src/Vagrantfile_ip-address-line.txt
      IPLINE=$(pbpaste)

      # Strip the line down to just the IP address itself
      IPADDRESS=$(echo ${IPLINE#*ip: } | sed -e 's/^"//' -e 's/"$//')

      # Delete file holding the original line of text
      rm -f src/Vagrantfile_ip-address-line.txt

      # Make changes to environment constants
      sed -e 's/APP_IN_TEST_MODE=false/APP_IN_TEST_MODE=true/g' -e 's/CACHE_DRIVER=filesystem/CACHE_DRIVER=array/g' -e '/SMTP_SERVER=maildev/s/^/# /g' src/.env.example > src/.env.new
      mv src/.env.new src/.env
      wait

      # Output changes
      echo '> Generating .env file..'
      echo '> Set APP_IN_TEST_MODE to true'
      echo '> Set CACHE_DRIVER to array'
      echo '> Commented out SMTP_SERVER=maildev'

    fi

    echo '> Installing Composer dependencies..'
    composer install
    wait

    echo '> Locking dependencies..'
    yarn --pure-lockfile
    wait

  fi

  if [ $1 = 'vagrant' ]
  then
    if [ -f 'Vagrantfile' ]
    then

      # Set environment constants for the Vagrant platform
      sed -e 's/APP_SECURE=true/APP_SECURE=false/g' -e 's/APP_HOST=example.com/APP_HOST='${IPADDRESS}'/g' src/.env > src/.env.new
      echo '> Set APP_SECURE to false'
      echo '> Set APP_HOST to' ${IPADDRESS}
      echo '> Preparing virtual machine..'
      vagrant up
      wait

    else
      echo 'ERROR: No Vagrantfile detected.'
      echo 'Please make sure you are actually inside a repo,'
      echo 'Then use one of the following:'
      echo '$ setup docker initial'
      echo '$ setup docker'
      exit
    fi

  elif [ $1 = 'docker' ]
  then
    if [ -f 'docker-compose.dev.yml' ]
    then

      echo '> Launching Docker images in daemon mode..'
      bin/docker-dev-up -d
      wait

      echo '> Migrating database..'
      if [ -f 'bin/docker-dev-migrate' ]
      then
      	bin/docker-dev-migrate
      else
        if [ -d 'docker/web' ]
        then
          CONTAINER = 'web'
        else
          CONTAINER = 'php'
        fi
        bin/docker-dev run -w /opt ${CONTAINER} "php src/vendor/bin/phinx migrate"
      fi
      wait

      # Overwrite IPADDRESS from the one in Vagrantfile to the one Docker said to use
      IPADDRESS=$(docker-compose port nginx-proxy 443)

      if [ -f 'src/.env.example' ]
      then

        # Set environment constants for the Docker platform
        sed -e 's/APP_SECURE=false/APP_SECURE=true/g' -e 's/APP_HOST=.*/APP_HOST='${IPADDRESS}'/g' src/.env > src/.env.new
        echo '> Set APP_SECURE to true'
        echo '> Set APP_HOST to' ${IPADDRESS}
        wait

      fi
    else
      echo 'ERROR: No docker.compose.dev.yml file detected.'
      echo 'Please make sure you are actually inside a repo,'
      echo 'Then use one of the following:'
      echo '$ setup vagrant initial'
      echo '$ setup vagrant'
      exit
    fi
  else
    echo 'ERROR: Incorrect platform parameter entered.'
    echo 'Please make sure you are actually inside a repo,'
    echo 'Then use one of the following:'
    echo '$ setup docker initial'
    echo '$ setup docker'
    echo '$ setup vagrant initial'
    echo '$ setup vagrant'
    exit
  fi

  # Launch
  echo '> Launching in Chrome..'
  /usr/bin/open -a '/Applications/Google Chrome.app' https://${IPADDRESS}
  echo '> Site running at URL: https://'${IPADDRESS}

  # Clean up environment files
  mv src/.env.new src/.env

  # Finish
  echo '> [OPTIONAL] Givin em one of these..'
  echo '> Setup complete'

else
  echo 'Error: No platform entered.'
  echo 'Possible usage cases:'
  echo '$ setup docker initial'
  echo '$ setup docker'
  echo '$ setup vagrant initial'
  echo '$ setup vagrant'
fi
