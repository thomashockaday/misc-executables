#!/bin/bash

###

# This script sets up a working environment from a Base site repo.
# It requires an existing src/.env.example file and a Vagrantfile,
# which should already exist inside the directory.
#
# It takes two parameters: PLATFORM and INITIAL
# PLATFORM should either be "vagrant" or "docker"
# depending on which version of base the site is built on -
# or your personal preference
#
# INITIAL is an optional parameter.
# It tells the script whether to do a complete installation,
# Or just set up the environment itself.
# INITIAL should be used when installing dependencies,
# such as after first cloning a repo.
#
# It should be ran in the root directory of a repository.
# For example:
# $ git clone [repo url] [repo name]
# $ cd [repo name]
# $ setup [docker/vagrant] [initial?]
#
# Possible usage cases:
#
# $ setup docker initial
# $ setup docker
# $ setup vagrant initial
# $ setup vagrant

###

# Only run if the PLATFORM parameter was passed
if [ $1 ]
then

  echo '> Pulling changes from the remote repository..'
  git pull

  # If the INITIAL parameter was passed
  if [ $2 ] && [ $2 = 'initial' ]
  then

    # Grab the 'config.vm.network' line from Vagrantfile
    # Store it in a new file
    grep 'ip: ' Vagrantfile > src/Vagrantfile_ip-address-line.txt

    # Copy the contents of the new file to the clipboard
    pbcopy < src/Vagrantfile_ip-address-line.txt
    IPLINE=$(pbpaste)

    # Strip the line down to just the IP address itself
    IPADDRESS=$(echo ${IPLINE#*ip: } | sed -e 's/^"//' -e 's/"$//')

    # Delete file holding the original line of text
    rm -f src/Vagrantfile_ip-address-line.txt

    # Make changes to environment constants
    # Then save in a new file (.env)
    sed -e 's/APP_IN_TEST_MODE=false/APP_IN_TEST_MODE=true/g' -e 's/CACHE_DRIVER=filesystem/CACHE_DRIVER=array/g' -e '/SMTP_SERVER=maildev/s/^/# /g' src/.env.example > src/.env.new
    mv src/.env.new src/.env

    # Output changes
    echo ''
    echo '> Generating .env file..'
    echo '> Set APP_IN_TEST_MODE to true'
    echo '> Set CACHE_DRIVER to array'
    echo '> Commented out SMTP_SERVER=maildev'

    echo '> Installing Composer dependencies..'
    composer install

    echo '> Locking dependencies..'
    yarn --pure-lockfile

  fi

  # handle PLATFORM parameter
  if [ $1 = 'vagrant' ]
  then

    # Check to see if a Vagrantfile exists
    if [ -f 'Vagrantfile' ]
    then

      # Set environment constants for the Vagrant platform
      sed -e 's/APP_SECURE=true/APP_SECURE=false/g' -e 's/APP_HOST=example.com/APP_HOST='${IPADDRESS}'/g' src/.env > src/.env.new
      echo '> Set APP_SECURE to false'
      echo '> Set APP_HOST to' ${IPADDRESS}

      echo '> Preparing virtual machine..'
      vagrant up
      wait
    else
      echo 'Error: No Vagrantfile detected.'
      echo 'Aborting script.'
      exit;
    fi
  elif [ $1 = 'docker' ]
  then

    # Check to see if repo is actually setup for Docker
    if [ -f 'docker-compose.dev.yml' ]
    then

      echo '> Launching Docker images in daemon mode..'
      bin/docker-dev-up -d
      wait
      echo '> Migrating database..'

      # The newer Base versions use a docker-dev-migrate file to perform migrations
      if [ -f 'bin/docker-dev-migrate' ]
      then
      	bin/docker-dev-migrate
        wait
      else
        # Older Base versions need to be worked around
        bin/docker-dev run -w /opt php "php src/vendor/bin/phinx migrate"
        wait
      fi

      # Overwrite IP address from the one in Vagrantfile to the one Docker said to use
      IPADDRESS=$(docker-compose port nginx-proxy 443)

      # Set environment constants for the Docker platform
      sed -e 's/APP_HOST=example.com/APP_HOST='${IPADDRESS}'/g' src/.env > src/.env.new
      echo '> Set APP_HOST to' ${IPADDRESS}

    else
      echo 'Error: No docker-compose.dev.yml file detected.'
      echo 'Please use one of the following:'
      echo '$ setup vagrant initial'
      echo '$ setup vagrant'
      exit;
    fi
  fi

  # Clean up environment files
  mv src/.env.new src/.env

  echo '> Launching in Chrome..'
  /usr/bin/open -a '/Applications/Google Chrome.app' https://${IPADDRESS}
  echo '> Site running at URL: https://'${IPADDRESS}
  echo '> [OPTIONAL] Givin em one of these..'
  echo '> Setup complete'
  echo ''

else
  echo 'Error: No platform entered.'
  echo 'Possible usage cases:'
  echo '$ setup docker initial'
  echo '$ setup docker'
  echo '$ setup vagrant initial'
  echo '$ setup vagrant'
fi
